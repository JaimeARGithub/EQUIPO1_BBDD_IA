/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.trabajoaccdatequipo1;

import java.util.Collection;
import javax.swing.JFrame;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author pokem
 */
public class TiposInterfazModificar extends javax.swing.JDialog {

    /**
     * Creates new form TiposInterfazModificar
     */
    
    Collection<Tipos> tiposTabla;
    String tipo;
    
    public TiposInterfazModificar(java.awt.Frame parent, boolean modal, String tipo, String desc, Collection<Tipos> colec) {
        super(parent, modal);
        initComponents();
        
        this.tiposTabla = colec;
        this.tipo = tipo;
        
        
        // En primer lugar, en el text field y el text panel establecemos como texto
        // el tipo y la descripción que se han pasado por parámetro
        txtModificarTipoTipo.setText(tipo);
        txtModificarTipoDescripcion.setText(desc);
        
        
        // Se añaden listeners para los campos de texto del tipo y la descripción; si
        // ambos tienen algo de texto, el botón de aceptar se habilita; en cualquier
        // otro caso, está deshabilitado
        txtModificarTipoTipo.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                actualizarBotonAceptar();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                actualizarBotonAceptar();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                actualizarBotonAceptar();
            }
        });
        
        txtModificarTipoDescripcion.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                actualizarBotonAceptar();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                actualizarBotonAceptar();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                actualizarBotonAceptar();
            }
        }) ;
    }
    
    /**
     * Método que habilita o deshabilita el botón de aceptar dependiendo del
     * contenido de los campos de texto para el tipo y la descripción.
     */
    private void actualizarBotonAceptar() {
        // Se pilla el texto del tipo y de la descripcion
        String txtTipo = txtModificarTipoTipo.getText().trim();
        String txtDesc = txtModificarTipoDescripcion.getText().trim();
        
        // Si en ambos existe texto, el botón de aceptar se habilita
        btnAceptarModificarTipo.setEnabled(!txtTipo.isEmpty() && !txtDesc.isEmpty());
    }
    
    private TiposInterfazModificar(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtModificarTipoTipo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtModificarTipoDescripcion = new javax.swing.JTextPane();
        btnAceptarModificarTipo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar tipo"));

        jLabel1.setText("Tipo:");

        jLabel2.setText("Descripción:");

        jScrollPane1.setViewportView(txtModificarTipoDescripcion);

        btnAceptarModificarTipo.setText("Aceptar");
        btnAceptarModificarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarModificarTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(txtModificarTipoTipo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 273, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAceptarModificarTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtModificarTipoTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAceptarModificarTipo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarModificarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarModificarTipoActionPerformed
        // Al darle a aceptar, dentro de toda la lista de tipos existente buscaremos
        // aquel cuyo texto del tipo coincide con el que se ha enviado por parámetro
        // a la apertura del diálogo
        Tipos tipoModif = null;
        for (Tipos e:tiposTabla) {
            if ((e.getTipo()).equals(this.tipo)) {
                tipoModif = e;
                break;
            }
        }
        
        // Tras localizar el tipo que es aquel cuyos datos coinciden con
        // los enviados por parámetro (el tipo que queremos modificar), llamamos
        // al método para modificar un tipo usando su ID y los datos establecidos
        // en los campos de texto del dialog
        Metodos.modificarTipo(String.valueOf(tipoModif.getIdtipo()), txtModificarTipoTipo.getText(), txtModificarTipoDescripcion.getText());
        dispose();
    }//GEN-LAST:event_btnAceptarModificarTipoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TiposInterfazModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TiposInterfazModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TiposInterfazModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TiposInterfazModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TiposInterfazModificar dialog = new TiposInterfazModificar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarModificarTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane txtModificarTipoDescripcion;
    private javax.swing.JTextField txtModificarTipoTipo;
    // End of variables declaration//GEN-END:variables
}
