/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.trabajoaccdatequipo1;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Collection;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pokem
 */
public class TiposInterfaz extends javax.swing.JFrame {

    /**
     * Creates new form TiposInterfaz
     */
    
    // Recogemos los datos de todos los tipos para pasárselos como datos a la tabla
    public static Collection<Tipos> tiposTabla;
    DefaultTableModel modelo;
    
    public TiposInterfaz() {
        initComponents();
        
        modelo = (DefaultTableModel) tablaTipos.getModel();
        
        // quito el autoresize para que no se auto-ajusten las dos columnas al cambiar el ancho de la ventana
        tablaTipos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        
        // a la primera columna le fijo el ancho y a la segunda se lo dejo expandible
        tablaTipos.getColumnModel().getColumn(0).setPreferredWidth(200);
        
        tablaTipos.getColumnModel().getColumn(1).setPreferredWidth(1000);
        tablaTipos.getColumnModel().getColumn(1).setResizable(true);

        // A la tabla se le pasan como datos la info recogida sobre los tipos
        actualizarTabla();
        
        
        // Para hacer que los botones Modificar, Eliminar y Consultar se deshabiliten y habiliten:
        // se establece un listener de la selección
        tablaTipos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
                // Si la fila seleccionada es la de posición 0 o más, se habilitan
                if (tablaTipos.getSelectedRow() > -1) {
                    btnModificarTipos.setEnabled(true);
                    btnEliminarTipos.setEnabled(true);
                    btnConsultarTipos.setEnabled(true);
                    
                // Si no, se deshabilitan
                } else {
                    btnModificarTipos.setEnabled(false);
                    btnEliminarTipos.setEnabled(false);
                    btnConsultarTipos.setEnabled(false);
                }
            }
        } );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNuevoTipos = new javax.swing.JButton();
        btnModificarTipos = new javax.swing.JButton();
        btnEliminarTipos = new javax.swing.JButton();
        btnConsultarTipos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTipos = new javax.swing.JTable();
        btnAtrasTipos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipos"));

        btnNuevoTipos.setText("Nuevo");
        btnNuevoTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoTiposActionPerformed(evt);
            }
        });

        btnModificarTipos.setText("Modificar");
        btnModificarTipos.setEnabled(false);
        btnModificarTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarTiposActionPerformed(evt);
            }
        });

        btnEliminarTipos.setText("Eliminar");
        btnEliminarTipos.setEnabled(false);
        btnEliminarTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTiposActionPerformed(evt);
            }
        });

        btnConsultarTipos.setText("Consultar");
        btnConsultarTipos.setEnabled(false);
        btnConsultarTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarTiposActionPerformed(evt);
            }
        });

        tablaTipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tipo", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaTipos);
        if (tablaTipos.getColumnModel().getColumnCount() > 0) {
            tablaTipos.getColumnModel().getColumn(0).setResizable(false);
            tablaTipos.getColumnModel().getColumn(1).setResizable(false);
        }

        btnAtrasTipos.setText("Atrás");
        btnAtrasTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasTiposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNuevoTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificarTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConsultarTipos, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(btnAtrasTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevoTipos)
                .addGap(18, 18, 18)
                .addComponent(btnModificarTipos)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarTipos)
                .addGap(18, 18, 18)
                .addComponent(btnConsultarTipos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(btnAtrasTipos)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoTiposActionPerformed
        tablaTipos.clearSelection();
        
        TiposInterfazInsertar dialog = new TiposInterfazInsertar(TiposInterfaz.this, true);
        
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                actualizarTabla();
            }
        });
        dialog.setVisible(true);
    }//GEN-LAST:event_btnNuevoTiposActionPerformed

    private void btnModificarTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarTiposActionPerformed
        int filaElegida = tablaTipos.getSelectedRow();
        
        String tipo = modelo.getValueAt(filaElegida, 0).toString();
        String desc = modelo.getValueAt(filaElegida, 1).toString();
        
        TiposInterfazModificar dialog = new TiposInterfazModificar(TiposInterfaz.this, true, tipo, desc, tiposTabla);
        
        // Cuando se cierre el dialog para modificaciones, los datos de la tabla se actualizarán
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                actualizarTabla();
            }
        });

        dialog.setVisible(true);
    }//GEN-LAST:event_btnModificarTiposActionPerformed

    private void btnConsultarTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarTiposActionPerformed
        // Recogemos la fila seleccionada de la tabla
        int filaElegida = tablaTipos.getSelectedRow();
        
        if (filaElegida > -1) {
            for (Tipos e:tiposTabla) {
                // Se recorre la lista de objetos Tipo (todos los tipos) que la 
                // tabla de la interfaz utiliza como fuente de datos y se emplea 
                // aquel Tipo cuyos datos coincidan con el texto existente en la tabla.
                // Se compara por el campo de la primera columna.
                if ((e.getTipo()).equals(modelo.getValueAt(filaElegida, 0))) {
                    TiposInterfazConsulta dialog = new TiposInterfazConsulta(TiposInterfaz.this, true, Metodos.verTipoDatos(e.getIdtipo()));
                    dialog.setVisible(true);
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnConsultarTiposActionPerformed

    private void btnEliminarTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTiposActionPerformed
        // Se detecta la fila seleccionada por el usuario
        int filaElegida = tablaTipos.getSelectedRow();
        
        if (filaElegida > -1) {
            // Puesto que la eliminación es una operación destructiva, antes de
            // realizarla se solicitará confirmación vía diálogo emergente
            int respuesta = JOptionPane.showConfirmDialog(this, 
                    "¿Estás seguro de que quieres eliminar este tipo?",
                    "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            
            if (respuesta == JOptionPane.YES_OPTION) {
                
                // En caso de que se confirme la eliminación, se busca la ID del tipo seleccionado.
                // La ID se busca recorriendo la lista de Tipos que utiliza la tabla para obtener
                // los datos y buscando aquel cuyo nombre coincide con el que hay en el campo tipo
                // de la tabla en la fila seleccionada (en la columna 0).
                int idTipoBorrar = -1;
                for (Tipos e: tiposTabla) {
                    if ((e.getTipo()).equals(modelo.getValueAt(filaElegida, 0))) {
                        idTipoBorrar = e.getIdtipo();
                        break;
                    }
                }
                
                modelo.removeRow(filaElegida);
                Metodos.borrarTipo(idTipoBorrar);
                System.out.println("Eliminado con éxito");
                
            } else {
                System.out.println("Eliminación cancelada");
            }
        }
    }//GEN-LAST:event_btnEliminarTiposActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Metodos.cerrarConexion();
    }//GEN-LAST:event_formWindowClosing

    private void btnAtrasTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasTiposActionPerformed
        dispose();
        TrabajoAccDatEquipo1.interfaz();
    }//GEN-LAST:event_btnAtrasTiposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TiposInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TiposInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TiposInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TiposInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TiposInterfaz().setVisible(true);
            }
        });
    }
    
    
    public void actualizarTabla() {
        // se elimina la fila inicial de la tabla
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        
        // se recupera la info sobre los tipos
        tiposTabla = Metodos.selectAllTipos();
        
        // se recorre la colección devuelta, y mediante sus datos se rellena la tabla
        for (Tipos e:tiposTabla) {
            String tipo = e.getTipo();
            String desc = e.getDescripcion();
            
            // los datos se pasan a la tabla en forma de array de objetos
            Object[] fila = {tipo, desc};
            modelo.addRow(fila);
        }
        
        // y se actualiza la tabla
        modelo.fireTableDataChanged();
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtrasTipos;
    private javax.swing.JButton btnConsultarTipos;
    private javax.swing.JButton btnEliminarTipos;
    private javax.swing.JButton btnModificarTipos;
    private javax.swing.JButton btnNuevoTipos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTipos;
    // End of variables declaration//GEN-END:variables
}
